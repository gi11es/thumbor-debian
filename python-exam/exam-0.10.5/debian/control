Source: exam
Maintainer: Debian Python Modules Team <python-modules-team@lists.alioth.debian.org>
Uploaders: Gilles Dubuc <gilles@wikimedia.org>
Section: python
Priority: optional
Standards-Version: 3.9.8
Build-Depends: debhelper (>= 9),
               dh-python,
               python-all,
               python-mock,
               python-nose,
               python-pytest,
               python-setuptools,
               python-sphinx,
               python3-all,
               python3-mock,
               python3-nose,
               python3-pytest,
               python3-setuptools,
               python3-sphinx
X-Python-Version: >= 2.6
X-Python3-Version: >= 3.2
Homepage: https://github.com/fluxx/exam
Vcs-Git: https://anonscm.debian.org/git/python-modules/packages/python-exam.git
Vcs-Browser: https://anonscm.debian.org/cgit/python-modules/packages/python-exam.git

Package: python-exam
Architecture: all
Depends: ${misc:Depends}, ${python:Depends}, python-mock
Description: Python module to help write better tests
 Exam is a Python toolkit for writing better tests.  It aims to remove
 a lot of the boiler plate testing code one often writes, while still
 following Python conventions and adhering to the unit testing
 interface.
 .
 Aside from the obvious "does the code work?", writings tests has many
 additional goals and benefits:
 .
 - If written semantically, reading tests can help demonstrate how the
 code is supposed to work to other developers.
 .
 - If quick running, tests provide feedback during development that
 your changes are working or not having an adverse side effects.
 .
 - If they're easy to write correctly, developers will write more tests
 and they will be of a higher quality.
 .
 Unfortunately, the common pattern for writing Python unit tests tends
 to not offer any of these advantages. Often times results in
 inefficient and unnecessarily obtuse testing code. Additionally,
 common uses of the mock library can often result in repetitive
 boiler-plate code or inefficiency during test runs.
 .
 exam aims to improve the state of Python test writing by providing a
 toolkit of useful functionality to make writing quick, correct and
 useful tests and as painless as possible.
 .
 This package installs the library for Python 2.

Package: python3-exam
Architecture: all
Depends: ${misc:Depends}, ${python:Depends}, python-mock
Description: Python module to help write better tests
 Exam is a Python toolkit for writing better tests.  It aims to remove
 a lot of the boiler plate testing code one often writes, while still
 following Python conventions and adhering to the unit testing
 interface.
 .
 Aside from the obvious "does the code work?", writings tests has many
 additional goals and benefits:
 .
 - If written semantically, reading tests can help demonstrate how the
 code is supposed to work to other developers.
 .
 - If quick running, tests provide feedback during development that
 your changes are working or not having an adverse side effects.
 .
 - If they're easy to write correctly, developers will write more tests
 and they will be of a higher quality.
 .
 Unfortunately, the common pattern for writing Python unit tests tends
 to not offer any of these advantages. Often times results in
 inefficient and unnecessarily obtuse testing code. Additionally,
 common uses of the mock library can often result in repetitive
 boiler-plate code or inefficiency during test runs.
 .
 exam aims to improve the state of Python test writing by providing a
 toolkit of useful functionality to make writing quick, correct and
 useful tests and as painless as possible.
 .
 This package installs the library for Python 3.
