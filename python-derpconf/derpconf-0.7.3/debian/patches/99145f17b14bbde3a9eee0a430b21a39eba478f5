Description: 99145f17b14bbde3a9eee0a430b21a39eba478f5
 Upstream commit: Add ability to read multiple config files in a given folder
 .
 derpconf (0.7.3-2) unstable; urgency=low
 .
   * Add upstream change 99145f17b14bbde3a9eee0a430b21a39eba478f5
Author: Gilles <gilles@thumbor.multimedia.eqiad.wmflabs>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- derpconf-0.7.3.orig/derpconf/config.py
+++ derpconf-0.7.3/derpconf/config.py
@@ -12,7 +12,7 @@ import sys
 import os
 import logging
 from collections import defaultdict
-from os.path import join, exists, abspath, dirname
+from os.path import join, exists, abspath, dirname, isdir
 import imp
 
 import six
@@ -76,6 +76,16 @@ class Config(object):
 
     @classmethod
     def __load_from_path(cls, conf, path):
+        if isdir(path):
+            conf.config_folder = path
+            files = sorted(os.listdir(path))
+
+            for file in files:
+                filepath = path + os.sep + file
+                conf = Config.__load_from_path(conf, filepath)
+
+            return conf
+
         with open(path) as config_file:
             name = 'configuration'
             code = config_file.read()
--- derpconf-0.7.3.orig/vows/config_vows.py
+++ derpconf-0.7.3/vows/config_vows.py
@@ -76,6 +76,24 @@ class Configuration(Vows.Context):
                 def should_have_default_values(self, topic):
                     expect(topic.DEFAULT).to_equal('DEFAULTVALUE')
 
+        class WhenPathIsDirectory(Vows.Context):
+            def topic(self):
+                return Config.load(fix('conf.d'), defaults={
+                    'PROPER': 'PROPERVALUE'
+                })
+
+            def should_have_default_value(self, topic):
+                expect(topic.PROPER).to_equal('PROPERVALUE')
+
+            def should_have_overridden_value(self, topic):
+                expect(topic.FOO).to_equal('override')
+
+            def should_have_new_value(self, topic):
+                expect(topic.NEW).to_equal('thing')
+
+            def should_not_have_lower_case_value(self, topic):
+                expect(hasattr(topic, 'baz')).to_be_false()
+
     class WhenSettingAnAlias(Vows.Context):
 
         def topic(self):
--- /dev/null
+++ derpconf-0.7.3/vows/fixtures/conf.d/01-sample.conf
@@ -0,0 +1,2 @@
+FOO="bar"
+baz="baj"
--- /dev/null
+++ derpconf-0.7.3/vows/fixtures/conf.d/02-sample.conf
@@ -0,0 +1,2 @@
+FOO="override"
+NEW="thing"
\ No newline at end of file
